/*
 * FlexxCom statistics extension
 * OpenFlow 1.0
 */

#version 1

enum ofp_flexxcom_stats_type(wire_type=uint32_t) {
        OFPFCST_GLOBAL = 1,
        OFPFCST_PORT   = 2
};

struct ofp_flexxcom_stats_request : of_experimenter_stats_request {
        uint8_t version;
        uint8_t type == 16;
        uint16_t length;
        uint32_t xid;
        uint16_t stats_type == 0xffff;
        enum ofp_stats_request_flags flags;
        uint32_t experimenter == 0xe433; //random id
        enum ofp_flexxcom_stats_type subtype == ?; //device or port stats
};

struct ofp_flexxcom_stats_reply : of_experimenter_stats_reply {
        uint8_t version;
        uint8_t type == 17;
        uint16_t length;
        uint32_t xid;
        uint16_t stats_type == 0xffff;
        enum ofp_stats_reply_flags flags;
        uint32_t experimenter == 0xe433; //random id
        enum ofp_flexxcom_stats_type subtype == ?; //device or port stats
};

struct ofp_flexxcom_global_stats_request : ofp_flexxcom_stats_request {
        uint8_t version;
        uint8_t type == 16;
        uint16_t length;
        uint32_t xid;
        uint16_t stats_type == 0xffff;
        enum ofp_stats_request_flags flags;
        uint32_t experimenter == 0xe433;
        enum ofp_flexxcom_stats_type subtype == 1;
};

struct ofp_flexxcom_global_stats_reply : ofp_flexxcom_stats_reply {
        uint8_t version;
        uint8_t type == 17;
        uint16_t length;
        uint32_t xid;
        uint16_t stats_type == 0xffff;
        enum ofp_stats_reply_flags flags;
        uint32_t experimenter == 0xe433;
        enum ofp_flexxcom_stats_type subtype == 1;

        uint64_t consumption;
        uint64_t load;
};

struct ofp_flexxcom_port_stats_request : ofp_flexxcom_stats_request {
        uint8_t version;
        uint8_t type == 16;
        uint16_t length;
        uint32_t xid;
        uint16_t stats_type == 0xffff;
        enum ofp_stats_request_flags flags;
        uint32_t experimenter == 0xe433;
        enum ofp_flexxcom_stats_type subtype == 2;

        uint16_t port_no; //single port or all ports (if port_no == OFPP_NONE)
        pad(6);
};

struct ofp_flexxcom_port_stats_reply : ofp_flexxcom_stats_reply {
        uint8_t version;
        uint8_t type == 17;
        uint16_t length;
        uint32_t xid;
        uint16_t stats_type == 0xffff;
        enum ofp_stats_reply_flags flags;
        uint32_t experimenter == 0xe433;
        enum ofp_flexxcom_stats_type subtype == 2;

        uint16_t port_no;
        pad(6);

        uint64_t consumption;
        uint64_t load;
};
